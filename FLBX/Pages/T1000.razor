@implements Microsoft.AspNetCore.Components.IComponent
@using Syncfusion.Blazor.Grids
@using Syncfusion.Blazor.DropDowns
@using Syncfusion.Blazor.Buttons
@using Syncfusion.Blazor.Calendars
@using Syncfusion.Blazor.Inputs
@using Syncfusion.Blazor.Cards
@using Syncfusion.Blazor.Layouts

@using System.Text.Json

@inject MessageService messageService

@*TOP Menu  *@

<SfButton @ref="btnQuery" OnClick="@btnQuery_OnClickAsync"> Query Test</SfButton>

<div class="row">
    <div class="col-lg-12 px-0">
        <div class="card shadow mb-2 border-bottom-primary">
            <a href="#collapseTopMenu" class="d-block card-header py-2" data-toggle="collapse" role="button" aria-expanded="true" aria-controls="collapseTopMenu">
                <h6 class="m-0 font-weight-bold text-primary">조회조건</h6>
            </a>
            <div class="collapse show" id="collapseTopMenu" style="">
                <div class="card-body pb-1">
                    <div class="row">
                        @*<div class="col-xl-3">
                                <SfDateRangePicker Placeholder="생산시작일 From To"></SfDateRangePicker>
                            </div>
                            <div class="col-xl-3">
                                <SfTextBox Placeholder="이름:" FloatLabelType="@FloatLabelType.Never"></SfTextBox>
                            </div>*@
                        <FLBX.Components.FxDropDown MediumColSpanValue="6" Placeholder="제품1" PopupHeight="230px" />
                        <FLBX.Components.FxDropDown MediumColSpanValue="3" Placeholder="제품2" PopupHeight="430px" />
                        <FLBX.Components.FxDropDown MediumColSpanValue="3" Placeholder="제품3" PopupHeight="630px" />
                        @*<div class="col-xl-3">
                                <SfDropDownList TItem="string" TValue="string" PopupHeight="230px" Placeholder="제품">
                                </SfDropDownList>
                            </div>*@
                        @*<div class="col-xl-3">
                                <SfTextBox Placeholder="ProductOrder.." FloatLabelType="@FloatLabelType.Never"></SfTextBox>
                            </div>*@
                    </div>
                    <div class="row d-flex justify-content-end">
                        <div class="p-2">
                            <SfButton IsPrimary="true">조회</SfButton>
                            <SfButton CssClass="e-danger">Lot생성</SfButton>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
@*TOP Menu -End- *@

@*Main  Content *@
<div class="row">
    <div class="col-lg-12 px-0">
        <div class="control_wrapper shadow mb-4">
            <SfSplitter CssClass="out-splitter py-3" Width="100%" SeparatorSize="2" Height="100%">
                <SplitterPanes>
                    <SplitterPane Size="30%" Min="60px" CssClass="px-3">
                        <ContentTemplate>
                            <div class="font-weight-bold text-info mb-1"><i class="fas fa fa-bars pr-1"></i>WorkOrder</div>
                            <SfGrid DataSource="@Workorders" AllowExcelExport="true" AllowPaging="true" AllowTextWrap="true" AllowRowDragAndDrop="true" AllowResizing="true" AllowReordering="true" AllowFiltering="true">
                                <GridColumns>
                                    <GridColumn Field="WORKORDERID" IsPrimaryKey="true" HeaderText="ID" Width="100"></GridColumn>
                                    <GridColumn Field="WORKORDERNAME" HeaderText="NAME" TextAlign="TextAlign.Right" Width="50"></GridColumn>
                                    <GridColumn Field="QTY" HeaderText="QTY" Width="50"></GridColumn>
                                    <GridColumn Field="PRODUCTDEFINITIONID" HeaderText="PRODUCT" Width="80"></GridColumn>
                                    <GridColumn Field="PRODUCTORDERID" HeaderText="PO" Width="80"></GridColumn>
                                </GridColumns>
                            </SfGrid>
                        </ContentTemplate>
                    </SplitterPane>
                    <SplitterPane Size="20%" Min="20%" Max="20%" CssClass="px-3">
                        <ContentTemplate>
                            <div class="font-weight-bold text-info mb-1"><i class="fas fa fa-bars pr-1"></i>Create Lot</div>
                            <div class="p-2">
                                <SfTextBox Placeholder="WorkOrder" FloatLabelType="@FloatLabelType.Never"></SfTextBox>
                            </div>
                            <div class="p-2">
                                <SfTextBox Placeholder="잔여Qty" FloatLabelType="@FloatLabelType.Never" Readonly="true"></SfTextBox>
                            </div>
                            <div class="p-2">
                                <SfNumericTextBox Format="(Lot개수) ###" TValue="double?" Value=10></SfNumericTextBox>
                            </div>
                            <div class="p-2">
                                <SfNumericTextBox Format="(Lot별Qty) ###" TValue="double?" Value=10></SfNumericTextBox>
                            </div>
                            <div class="p-2">
                                <SfTextBox Placeholder="Prefix Keyword:" FloatLabelType="@FloatLabelType.Never"></SfTextBox>
                            </div>
                            <div class="p-2">
                                <SfTextBox Placeholder="Remark:" FloatLabelType="@FloatLabelType.Never"></SfTextBox>
                            </div>
                            <div class="p-2">
                                <SfTextBox Placeholder="Discription:" FloatLabelType="@FloatLabelType.Never"></SfTextBox>
                            </div>
                            <div class="p-2">
                                <SfButton IsPrimary="true">Lot임시 생성</SfButton>
                            </div>
                        </ContentTemplate>
                    </SplitterPane>
                    <SplitterPane Size="50%" Min="60px" CssClass="px-3">
                        <ContentTemplate>
                            <div class="font-weight-bold text-info mb-1"><i class="fas fa fa-bars pr-1"></i>Lot</div>
                            <SfGrid DataSource="@GridDataLot">
                                <GridColumns>
                                    <GridColumn Field=@nameof(Lot.Id) IsPrimaryKey="true" HeaderText="LotId" Width="50"></GridColumn>
                                    <GridColumn Field=@nameof(Lot.Name) HeaderText="이름" TextAlign="TextAlign.Right" Width="50"></GridColumn>
                                    <GridColumn Field=@nameof(Lot.Qty) HeaderText="수량" Width="50"></GridColumn>
                                    <GridColumn Field=@nameof(Lot.Segment) HeaderText="공정" Width="80"></GridColumn>
                                    <GridColumn Field=@nameof(Lot.Equitment) HeaderText="설비" Width="80"></GridColumn>
                                </GridColumns>
                            </SfGrid>
                        </ContentTemplate>
                    </SplitterPane>
                </SplitterPanes>
            </SfSplitter>
        </div>
    </div>
</div>

@*Main  Content End *@

@if (this.Workorders != null && this.Workorders.Count > 0)
{
    foreach (var item in Workorders)
    {
        <div>@item.PRODUCTORDERID </div>
    }
}
else
{
    <div> not find workorders </div>
}




@code {


    List<TempModel> Workorders { get; set; }

    public SfButton btnQuery;

    void Attach(RenderHandle renderHandle) { }

    async Task SetParametersAsync(ParameterView parameters) { }

    public List<WorkOrderDetails> GridData { get; set; }
    public List<Lot> GridDataLot { get; set; }

    protected override void OnInitialized()
    {
        GridData = WorkOrderDetails.GetAllRecords();
        GridDataLot = Lot.GetAllRecords();

    }

    private async Task btnQuery_OnClickAsync(MouseEventArgs arg)
    {
        //Query Message 생성
        QueryMessage queryMeasage = new QueryMessage()
        {
            QueryId = "GetWorkorder",
            QueryType = "Inquiry",
            QueryVersion = "001",
            SiteId = "A_10",
            ParameterKeyValue = new Dictionary<string, object>() { { "from", "2020-11-01 06:00:00" }, { "to", "2020-11-02 06:00:00" } }
        };

        FLMessageSet messageSet = messageService.CreateMessageSet(MeesageType.Query, queryMeasage, null, null);

        //Message Send
        var task = messageService.SendMessageAsync("Product", "/query/executequery", messageSet);
        await Task.WhenAll(task);
        ReplyMessage reply = task.Result;

        //Reply Message Binding
        this.Workorders = JsonSerializer.Deserialize<List<TempModel>>(Convert.ToString(reply.ResultKeyValues["reply"]));
    }

    class TempModel
    {
        public string WORKORDERID { get; set; }
        public string WORKORDERNAME { get; set; }
        public float QTY { get; set; }
        public string PRODUCTDEFINITIONID { get; set; }
        public string PRODUCTORDERID { get; set; }

    }
}

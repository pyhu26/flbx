@page "/7100"

@inject FxUtil fxUtil

@implements Microsoft.AspNetCore.Components.IComponent
@using Syncfusion.Blazor.Grids
@using Syncfusion.Blazor.DropDowns
@using Syncfusion.Blazor.Buttons
@using Syncfusion.Blazor.Calendars
@using Syncfusion.Blazor.Inputs
@using Syncfusion.Blazor.Cards
@using Syncfusion.Blazor.Layouts

@using System.Text.Json
@using FLBX.Components

@inject MessageService messageService

@*TOP Menu  *@

<SfButton @ref="btnQuery" OnClick="@btnQuery_OnClickAsync"> Query Test</SfButton>


<FLBX.Components.FxFilterGroup>

    <div class="row">
        <FxDateTimePicker MediumColSpanValue="3" Placeholder="Workorder 작업 시작 일자"></FxDateTimePicker>
        <FxDropDown MediumColSpanValue="3" Placeholder="제품"></FxDropDown>
        <FxDropDown MediumColSpanValue="3" Placeholder="Productorder"></FxDropDown>        
        <FxTextBox MediumColSpanValue="3" Placeholder="Workorder 이름 "> </FxTextBox>
    </div>
    <div class="row d-flex justify-content-end">
        <div class="p-2">
            <FLBX.Components.FxFilterButtons>
                <SfButton IsPrimary="true" OnClick="@btnQuery_OnClickAsync">조회</SfButton>
                <SfButton CssClass="e-danger">Lot생성 test</SfButton>
            </FLBX.Components.FxFilterButtons>
        </div>
    </div>

</FLBX.Components.FxFilterGroup>

<div class="row">
    <div class="col-lg-12 px-0">
        <div class="control_wrapper shadow mb-4" style="height: 615px;">
            <FxSplitContainer ContentsWidth="@(new string[]{"30%","30%","40%"})"  SplitType="@FLBX.Constants.SplitContainerType.H3" cssClass="out-splitter py-3" width="100%" height="100%">
                
                <ChildContent1>
                    <FxDateTimePicker MediumColSpanValue="12" Placeholder="Workorder 작업 시작 일자"></FxDateTimePicker>
                </ChildContent1>
                <ChildContent2>
                    <FxDropDown MediumColSpanValue="12" Placeholder="제품"></FxDropDown>                    
                </ChildContent2>                
                <ChildContent3>
                    <FxDropDown MediumColSpanValue="12" Placeholder="Productorder"></FxDropDown>
                </ChildContent3>                
            </FxSplitContainer>
        </div>
    </div>
</div>

@*Main  Content *@
@*<div class="row">
    <div class="col-lg-12 px-0">
        <div class="control_wrapper shadow mb-4">
            <SfSplitter CssClass="out-splitter py-3" Width="100%" SeparatorSize="2" Height="100%">
                <SplitterPanes>
                    <SplitterPane Size="30%" Min="60px" CssClass="px-3">
                        <ContentTemplate>
                            <div class="font-weight-bold text-info mb-1"><i class="fas fa fa-bars pr-1"></i>WorkOrder</div>
                            <SfGrid DataSource="@Workorders" AllowExcelExport="true" AllowPaging="true" AllowTextWrap="true" AllowRowDragAndDrop="true" AllowResizing="true" AllowReordering="true" AllowFiltering="true">
                                <GridColumns>
                                    <GridColumn Field="WORKORDERID" IsPrimaryKey="true" HeaderText="ID" Width="100"></GridColumn>
                                    <GridColumn Field="WORKORDERNAME" HeaderText="NAME" TextAlign="TextAlign.Right" Width="50"></GridColumn>
                                    <GridColumn Field="QTY" HeaderText="QTY" Width="50"></GridColumn>
                                    <GridColumn Field="PRODUCTDEFINITIONID" HeaderText="PRODUCT" Width="80"></GridColumn>
                                    <GridColumn Field="PRODUCTORDERID" HeaderText="PO" Width="80"></GridColumn>
                                </GridColumns>
                            </SfGrid>
                        </ContentTemplate>
                    </SplitterPane>
                    <SplitterPane Size="20%" Min="20%" Max="20%" CssClass="px-3">
                        <ContentTemplate>
                            <div class="font-weight-bold text-info mb-1"><i class="fas fa fa-bars pr-1"></i>Create Lot</div>
                            <div class="p-2">
                                <SfTextBox Placeholder="WorkOrder" FloatLabelType="@FloatLabelType.Never"></SfTextBox>
                            </div>
                            <div class="p-2">
                                <SfTextBox Placeholder="잔여Qty" FloatLabelType="@FloatLabelType.Never" Readonly="true"></SfTextBox>
                            </div>
                            <div class="p-2">
                                <SfNumericTextBox Format="(Lot개수) ###" TValue="double?" Value=10></SfNumericTextBox>
                            </div>
                            <div class="p-2">
                                <SfNumericTextBox Format="(Lot별Qty) ###" TValue="double?" Value=10></SfNumericTextBox>
                            </div>
                            <div class="p-2">
                                <SfTextBox Placeholder="Prefix Keyword:" FloatLabelType="@FloatLabelType.Never"></SfTextBox>
                            </div>
                            <div class="p-2">
                                <SfTextBox Placeholder="Remark:" FloatLabelType="@FloatLabelType.Never"></SfTextBox>
                            </div>
                            <div class="p-2">
                                <SfTextBox Placeholder="Discription:" FloatLabelType="@FloatLabelType.Never"></SfTextBox>
                            </div>
                            <div class="p-2">
                                <SfButton IsPrimary="true">Lot임시 생성</SfButton>
                            </div>
                        </ContentTemplate>
                    </SplitterPane>
                    <SplitterPane Size="50%" Min="60px" CssClass="px-3">
                        <ContentTemplate>
                            <div class="font-weight-bold text-info mb-1"><i class="fas fa fa-bars pr-1"></i>Lot</div>
                            <SfGrid DataSource="@GridDataLot">
                                <GridColumns>
                                    <GridColumn Field=@nameof(Lot.Id) IsPrimaryKey="true" HeaderText="LotId" Width="50"></GridColumn>
                                    <GridColumn Field=@nameof(Lot.Name) HeaderText="이름" TextAlign="TextAlign.Right" Width="50"></GridColumn>
                                    <GridColumn Field=@nameof(Lot.Qty) HeaderText="수량" Width="50"></GridColumn>
                                    <GridColumn Field=@nameof(Lot.Segment) HeaderText="공정" Width="80"></GridColumn>
                                    <GridColumn Field=@nameof(Lot.Equitment) HeaderText="설비" Width="80"></GridColumn>
                                </GridColumns>
                            </SfGrid>
                        </ContentTemplate>
                    </SplitterPane>
                </SplitterPanes>
            </SfSplitter>
        </div>
    </div>
</div>*@

@*Main  Content End *@

@code {

    public List<Splitter> splitters = new List<Splitter>();

    List<RenderFragment> Filters { get; set; }

    List<TempModel> Workorders { get; set; }

    public SfButton btnQuery;

    void Attach(RenderHandle renderHandle) { }

    async Task SetParametersAsync(ParameterView parameters) { }

    public List<WorkOrderDetails> GridData { get; set; }
    public List<Lot> GridDataLot { get; set; }

    protected override void OnInitialized()
    {
        GridData = WorkOrderDetails.GetAllRecords();
        GridDataLot = Lot.GetAllRecords();

        this.Filters = GetFilters();

        //SetSplitter();
    }

    private void SetSplitter()
    {
        this.splitters = new List<Splitter>();

        Splitter splitterModel = new Splitter()
        {
            size = "30%",
            cssClass = "px-3",
            min = "10%",
            title = "테스트타이틀",
            contentTemplate = fxUtil.CreateComponent(null,"M0001")
        };
        splitters.Add(splitterModel);

        splitterModel = new Splitter()
        {
            size = "50%",
            cssClass = "px-3",
            min = "10%",
            title = "테스트타이틀2",
            contentTemplate = fxUtil.CreateComponent(null, "M0002")
        };
        splitters.Add(splitterModel);

        splitterModel = new Splitter()
        {
            size = "20%",
            cssClass = "px-3",
            min = "10%",
            title = "테스트타이틀3",
            contentTemplate = fxUtil.CreateComponent(null, "M0003")
        };
        splitters.Add(splitterModel);
    }

    private List<RenderFragment> GetFilters()
    {
        List<RenderFragment> childFilters = new List<RenderFragment>();
        childFilters.Add(fxUtil.CreateComponent("FLBX.Components", "FxDropDown"));
        childFilters.Add(fxUtil.CreateComponent("FLBX.Components", "FxDateTimePicker"));

        return childFilters;
    }

    private async Task btnQuery_OnClickAsync(MouseEventArgs arg)
    {
        //Query Message 생성
        QueryMessage queryMessage = new QueryMessage()
        {
            QueryId = "GetWorkorder",
            QueryType = "Inquiry",
            QueryVersion = "001",
            SiteId = "A_10",
            ParameterKeyValue = new Dictionary<string, object>() { { "from", "2020-11-01 06:00:00" }, { "to", "2020-11-02 06:00:00" } }
        };

        FLMessageSet messageSet = messageService.CreateMessageSet(MeesageType.Query, queryMessage, null, null);

        //Message Send
        var task = messageService.SendMessageAsync("Product", "/query/executequery", messageSet);
        await Task.WhenAll(task);
        ReplyMessage reply = task.Result;

        //Reply Message Binding
        this.Workorders = JsonSerializer.Deserialize<List<TempModel>>(Convert.ToString(reply.ResultKeyValues["reply"]));
    }

    class TempModel
    {
        public string WORKORDERID { get; set; }
        public string WORKORDERNAME { get; set; }
        public float QTY { get; set; }
        public string PRODUCTDEFINITIONID { get; set; }
        public string PRODUCTORDERID { get; set; }

    }
}
